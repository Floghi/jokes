{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/ghilain/projects/jokes/app/root.tsx", "/home/ghilain/projects/jokes/app/routes/jokes[.]rss.tsx", "../app/utils/db.server.ts", "/home/ghilain/projects/jokes/app/routes/logout.tsx", "../app/utils/session.server.ts", "/home/ghilain/projects/jokes/app/routes/index.tsx", "/home/ghilain/projects/jokes/app/routes/jokes.tsx", "/home/ghilain/projects/jokes/app/routes/jokes/$jokeId.tsx", "../app/components/joke.tsx", "/home/ghilain/projects/jokes/app/routes/jokes/index.tsx", "/home/ghilain/projects/jokes/app/routes/jokes/new.tsx", "/home/ghilain/projects/jokes/app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  useCatch,\n} from \"@remix-run/react\";\n\nimport globalStylesUrl from \"./styles/global.css\";\nimport globalMediumStylesUrl from \"./styles/global-medium.css\";\nimport globalLargeStylesUrl from \"./styles/global-large.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    {\n      rel: \"stylesheet\",\n      href: globalMediumStylesUrl,\n      media: \"print, (min-width: 640px)\",\n    },\n    {\n      rel: \"stylesheet\",\n      href: globalLargeStylesUrl,\n      media: \"screen and (min-width: 1024px)\",\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => {\n  const description = `Learn Remix and laugh at the same time!`;\n  return {\n    charset: \"utf-8\",\n    description,\n    keywords: \"Remix,jokes\",\n    \"twitter:image\": \"https://remix-jokes.lol/social.png\",\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:creator\": \"@remix_run\",\n    \"twitter:site\": \"@remix_run\",\n    \"twitter:title\": \"Remix Jokes\",\n    \"twitter:description\": description,\n  };\n};\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        {title ? <title>{title}</title> : null}\n        <Links />\n      </head>\n      <body>\n        {children}\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  // throw new Error(\"Not implemented\");\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <div className=\"error-container\">\n        <h1>\n          {caught.status} {caught.statusText}\n        </h1>\n      </div>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Uh-oh!\">\n      <div className=\"error-container\">\n        <h1>App Error</h1>\n        <pre>{error.message}</pre>\n      </div>\n    </Document>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\n\nimport { db } from \"~/utils/db.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const jokes = await db.joke.findMany({\n    take: 100,\n    orderBy: { createdAt: \"desc\" },\n    include: { jokester: { select: { username: true } } },\n  });\n\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n  if (!host) {\n    throw new Error(\"Could not determine domain URL.\");\n  }\n  const protocol = host.includes(\"localhost\") ? \"http\" : \"https\";\n  const domain = `${protocol}://${host}`;\n  const jokesUrl = `${domain}/jokes`;\n\n  const rssString = `\n    <rss xmlns:blogChannel=\"${jokesUrl}\" version=\"2.0\">\n      <channel>\n        <title>Remix Jokes</title>\n        <link>${jokesUrl}</link>\n        <description>Some funny jokes</description>\n        <language>en-us</language>\n        <generator>Kody the Koala</generator>\n        <ttl>40</ttl>\n        ${jokes\n          .map((joke) =>\n            `\n            <item>\n              <title>${joke.name}</title>\n              <description>A funny joke called ${joke.name}</description>\n              <author>${joke.jokester.username}</author>\n              <pubDate>${joke.createdAt}</pubDate>\n              <link>${jokesUrl}/${joke.id}</link>\n              <guid>${jokesUrl}/${joke.id}</guid>\n            </item>\n          `.trim()\n          )\n          .join(\"\\n\")}\n      </channel>\n    </rss>\n  `.trim();\n\n  return new Response(rssString, {\n    headers: {\n      \"Cache-Control\": `public, max-age=${60 * 10}, s-maxage=${60 * 60 * 24}`,\n      \"Content-Type\": \"application/xml\",\n      \"Content-Length\": String(Buffer.byteLength(rssString)),\n    },\n  });\n};\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  db = global.__db;\n}\n\nexport { db };\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/utils/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport bcrypt from \"bcryptjs\";\n\nimport { db } from \"./db.server\";\n\ntype LoginForm = {\n  username: string;\n  password: string;\n};\n\nexport async function register({ username, password }: LoginForm) {\n  const passwordHash = await bcrypt.hash(password, 10);\n  const user = await db.user.create({\n    data: { username, passwordHash },\n  });\n  return { id: user.id, username };\n}\n\nexport async function login({ username, password }: LoginForm) {\n  const user = await db.user.findUnique({\n    where: { username },\n  });\n  if (!user) return null;\n  const isCorrectPassword = await bcrypt.compare(password, user.passwordHash);\n  if (!isCorrectPassword) return null;\n  return { id: user.id, username };\n}\n\nconst sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error(\"SESSION_SECRET must be set\");\n}\n\nconst storage = createCookieSessionStorage({\n  cookie: {\n    name: \"RJ_session\",\n    // secure doesn't work on localhost for Safari\n    // https://web.dev/when-to-use-local-https/\n    secure: process.env.NODE_ENV === \"production\",\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  },\n});\n\nexport function getUserSession(request: Request) {\n  return storage.getSession(request.headers.get(\"Cookie\"));\n}\n\nexport async function getUserId(request: Request) {\n  const session = await getUserSession(request);\n  const userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") return null;\n  return userId;\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId || typeof userId !== \"string\") {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    const user = await db.user.findUnique({\n      where: { id: userId },\n      select: { id: true, username: true },\n    });\n    return user;\n  } catch {\n    throw logout(request);\n  }\n}\n\nexport async function logout(request: Request) {\n  const session = await getUserSession(request);\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    },\n  });\n}\n\nexport async function createUserSession(userId: string, redirectTo: string) {\n  const session = await storage.getSession();\n  session.set(\"userId\", userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session),\n    },\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\n\nimport stylesUrl from \"../styles/index.css\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Remix: It's funny!\",\n    description: \"Remix jokes app. Learn Remix and laugh at the same time!\",\n  };\n};\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>\n          Remix <span>Jokes!</span>\n        </h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"jokes\">Read Jokes</Link>\n            </li>\n            <li>\n              <Link reloadDocument to=\"/jokes.rss\">\n                RSS\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n", "import type { LinksFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { db } from \"~/utils/db.server\";\nimport { getUser } from \"~/utils/session.server\";\nimport stylesUrl from \"../styles/jokes.css\";\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n  jokeListItems: Array<{ id: string; name: string }>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await getUser(request);\n\n  // in the official deployed version of the app, we don't want to deploy\n  // a site with unmoderated content, so we only show users their own jokes\n  const jokeListItems = user\n    ? await db.joke.findMany({\n        take: 5,\n        select: { id: true, name: true },\n        where: { jokesterId: user.id },\n        orderBy: { createdAt: \"desc\" },\n      })\n    : [];\n\n  const data: LoaderData = {\n    jokeListItems,\n    user,\n  };\n\n  return json(data);\n};\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function JokesScreen() {\n  const data = useLoaderData<LoaderData>();\n\n  return (\n    <div className=\"jokes-layout\">\n      <header className=\"jokes-header\">\n        <div className=\"container\">\n          <h1 className=\"home-link\">\n            <Link to=\"/\" title=\"Remix Jokes\" aria-label=\"Remix Jokes\">\n              <span className=\"logo\">\uD83E\uDD2A</span>\n              <span className=\"logo-medium\">J\uD83E\uDD2AKES</span>\n            </Link>\n          </h1>\n          {data.user ? (\n            <div className=\"user-info\">\n              <span>{`Hi ${data.user.username}`}</span>\n              <Form action=\"/logout\" method=\"post\">\n                <button type=\"submit\" className=\"button\">\n                  Logout\n                </button>\n              </Form>\n            </div>\n          ) : (\n            <Link to=\"/login\">Login</Link>\n          )}\n        </div>\n      </header>\n      <main className=\"jokes-main\">\n        <div className=\"container\">\n          <div className=\"jokes-list\">\n            {data.jokeListItems.length ? (\n              <>\n                <Link to=\".\">Get a random joke</Link>\n                <p>Here are a few more jokes to check out:</p>\n                <ul>\n                  {data.jokeListItems.map(({ id, name }) => (\n                    <li key={id}>\n                      <Link to={id} prefetch=\"intent\">\n                        {name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n                <Link to=\"new\" className=\"button\">\n                  Add your own\n                </Link>\n              </>\n            ) : null}\n          </div>\n          <div className=\"jokes-outlet\">\n            <Outlet />\n          </div>\n        </div>\n      </main>\n      <footer className=\"jokes-footer\">\n        <div className=\"container\">\n          <Link reloadDocument to=\"/jokes.rss\">\n            RSS\n          </Link>\n        </div>\n      </footer>\n    </div>\n  );\n}\n", "import type { Joke } from \"@prisma/client\";\nimport type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useCatch, useLoaderData, useParams } from \"@remix-run/react\";\n\nimport { db } from \"~/utils/db.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\nimport { JokeDisplay } from \"~/components/joke\";\n\nexport const meta: MetaFunction = ({\n  data,\n}: {\n  data: LoaderData | undefined;\n}) => {\n  if (!data) {\n    return {\n      title: \"No joke\",\n      description: \"No joke found\",\n    };\n  }\n  return {\n    title: `\"${data.joke.name}\" joke`,\n    description: `Enjoy the \"${data.joke.name}\" joke and much more`,\n  };\n};\n\ntype LoaderData = { joke: Joke; isOwner: boolean };\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await getUserId(request);\n  const joke = await db.joke.findUnique({ where: { id: params.jokeId } });\n  if (!joke) {\n    throw new Response(\"What a joke! Not found.\", { status: 404 });\n  }\n  const data: LoaderData = { joke, isOwner: userId === joke.jokesterId };\n  return json(data);\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const form = await request.formData();\n  if (form.get(\"_method\") !== \"delete\") {\n    throw new Response(`The _method ${form.get(\"_method\")} is not supported`, {\n      status: 400,\n    });\n  }\n  const userId = await requireUserId(request);\n  const joke = await db.joke.findUnique({\n    where: { id: params.jokeId },\n  });\n  if (!joke) {\n    throw new Response(\"Can't delete what does not exist\", { status: 404 });\n  }\n  if (joke.jokesterId !== userId) {\n    throw new Response(\"Pssh, nice try. That's not your joke\", {\n      status: 401,\n    });\n  }\n  await db.joke.delete({ where: { id: params.jokeId } });\n  return redirect(\"/jokes\");\n};\n\nexport default function JokeRoute() {\n  const data = useLoaderData<LoaderData>();\n\n  return <JokeDisplay joke={data.joke} isOwner={data.isOwner} />;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  switch (caught.status) {\n    case 400: {\n      return (\n        <div className=\"error-container\">\n          What you're trying to do is not allowed.\n        </div>\n      );\n    }\n    case 404: {\n      return (\n        <div className=\"error-container\">\n          Huh? What the heck is {params.jokeId}?\n        </div>\n      );\n    }\n    case 401: {\n      return (\n        <div className=\"error-container\">\n          Sorry, but {params.jokeId} is not your joke.\n        </div>\n      );\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  const { jokeId } = useParams();\n  return (\n    <div className=\"error-container\">\n      There was an error loading joke by the id {jokeId}. Sorry.\n    </div>\n  );\n}\n", "import type { Joke } from \"@prisma/client\";\nimport { Form, Link } from \"@remix-run/react\";\n\nexport function JokeDisplay({\n  joke,\n  isOwner,\n  canDelete = true,\n}: {\n  joke: Pick<Joke, \"content\" | \"name\">;\n  isOwner: boolean;\n  canDelete?: boolean;\n}) {\n  return (\n    <div>\n      <p>Here's your hilarious joke:</p>\n      <p>{joke.content}</p>\n      <Link to=\".\">{joke.name} Permalink</Link>\n      {isOwner ? (\n        <Form method=\"post\">\n          <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n          <button type=\"submit\" className=\"button\" disabled={!canDelete}>\n            Delete\n          </button>\n        </Form>\n      ) : null}\n    </div>\n  );\n}\n", "import type { Joke } from \"@prisma/client\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useCatch, useLoaderData } from \"@remix-run/react\";\n\nimport { db } from \"~/utils/db.server\";\nimport { getUserId } from \"~/utils/session.server\";\n\ntype LoaderData = { randomJoke: Joke };\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  const count = await db.joke.count();\n  const randomRowNumber = Math.floor(Math.random() * count);\n\n  // in the official deployed version of the app, we don't want to deploy\n  // a site with unmoderated content, so we only show users their own jokes\n  const [randomJoke] = userId\n    ? await db.joke.findMany({\n        take: 1,\n        skip: randomRowNumber,\n        where: {\n          jokesterId: userId,\n        },\n      })\n    : [];\n  if (!randomJoke) {\n    throw new Response(\"No jokes to be found!\", { status: 404 });\n  }\n  const data: LoaderData = { randomJoke };\n  return json(data);\n};\n\nexport default function JokesIndexRoute() {\n  const data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's a random joke:</p>\n      <p>{data.randomJoke.content}</p>\n      <Link to={data.randomJoke.id}>\"{data.randomJoke.name}\" Permalink</Link>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <div className=\"error-container\">\n        <p>\n          There are no jokes to display.\n          <br />\n          <small>\n            Note: this is the deployed version of the jokes app example and\n            because we don't want to show you unmoderated content, we only\n            display jokes you create in this version.\n          </small>\n        </p>\n        <Link to=\"new\">Add your own</Link>\n      </div>\n    );\n  }\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return <div>I did a whoopsies.</div>;\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  Link,\n  useActionData,\n  useCatch,\n  useTransition,\n} from \"@remix-run/react\";\n\nimport { JokeDisplay } from \"~/components/joke\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (!userId) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return json({});\n};\n\nfunction validateJokeContent(content: string) {\n  if (content.length < 10) {\n    return `That joke is too short`;\n  }\n}\n\nfunction validateJokeName(name: string) {\n  if (name.length < 2) {\n    return `That joke's name is too short`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: { name: string | undefined; content: string | undefined };\n  fields?: {\n    name: string;\n    content: string;\n  };\n};\n\n/**\n * This helper function gives us typechecking for our ActionData return\n * statements, while still returning the accurate HTTP status, 400 Bad Request,\n * to the client.\n */\nconst badRequest = (data: ActionData) => json(data, { status: 400 });\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const form = await request.formData();\n  const name = form.get(\"name\");\n  const content = form.get(\"content\");\n  if (typeof name !== \"string\" || typeof content !== \"string\") {\n    return badRequest({ formError: `Form not submitted correctly.` });\n  }\n\n  const fieldErrors = {\n    name: validateJokeName(name),\n    content: validateJokeContent(content),\n  };\n  const fields = { name, content };\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return badRequest({ fieldErrors, fields });\n  }\n\n  const joke = await db.joke.create({\n    data: { ...fields, jokesterId: userId },\n  });\n  return redirect(`/jokes/${joke.id}?redirectTo=/jokes/new`);\n};\n\nexport default function NewJokeRoute() {\n  const actionData = useActionData<ActionData>();\n  const transition = useTransition();\n\n  if (transition.submission) {\n    const name = transition.submission.formData.get(\"name\");\n    const content = transition.submission.formData.get(\"content\");\n    if (\n      typeof name === \"string\" &&\n      typeof content === \"string\" &&\n      !validateJokeContent(content) &&\n      !validateJokeName(name)\n    ) {\n      return (\n        <JokeDisplay\n          joke={{ name, content }}\n          isOwner={true}\n          canDelete={false}\n        />\n      );\n    }\n  }\n\n  return (\n    <div>\n      <p>Add your own hilarious joke</p>\n      <Form method=\"post\">\n        <div>\n          <label>\n            Name:{\" \"}\n            <input\n              type=\"text\"\n              defaultValue={actionData?.fields?.name}\n              name=\"name\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.name)}\n              aria-errormessage={\n                actionData?.fieldErrors?.name ? \"name-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.name ? (\n            <p className=\"form-validation-error\" role=\"alert\" id=\"name-error\">\n              {actionData.fieldErrors.name}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          <label>\n            Content:{\" \"}\n            <textarea\n              defaultValue={actionData?.fields?.content}\n              name=\"content\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.content)}\n              aria-errormessage={\n                actionData?.fieldErrors?.content ? \"content-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.content ? (\n            <p\n              className=\"form-validation-error\"\n              role=\"alert\"\n              id=\"content-error\"\n            >\n              {actionData.fieldErrors.content}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          {actionData?.formError ? (\n            <p className=\"form-validation-error\" role=\"alert\">\n              {actionData.formError}\n            </p>\n          ) : null}\n          <button type=\"submit\" className=\"button\">\n            Add\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 401) {\n    return (\n      <div className=\"error-container\">\n        <p>You must be logged in to create a joke.</p>\n        <Link to=\"/login?redirectTo=/jokes/new\">Login</Link>\n      </div>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return <div>Something unexpected went wrong. Sorry about that.</div>;\n}\n", "import type {\n  ActionFunction,\n  LinksFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\n\nimport { login, createUserSession, register } from \"~/utils/session.server\";\nimport { db } from \"~/utils/db.server\";\nimport stylesUrl from \"../styles/login.css\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Remix Jokes | Login\",\n    description: \"Login to submit your own jokes to Remix Jokes!\",\n  };\n};\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nfunction validateUsername(username: unknown) {\n  if (typeof username !== \"string\" || username.length < 3) {\n    return `Usernames must be at least 3 characters long`;\n  }\n}\n\nfunction validatePassword(password: unknown) {\n  if (typeof password !== \"string\" || password.length < 6) {\n    return `Passwords must be at least 6 characters long`;\n  }\n}\n\nfunction validateUrl(url: any) {\n  let urls = [\"/jokes\", \"/\", \"https://remix.run\"];\n  if (urls.includes(url)) {\n    return url;\n  }\n  return \"/jokes\";\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: { username: string | undefined; password: string | undefined };\n  fields?: { loginType: string; username: string; password: string };\n};\n\n/**\n * This helper function gives us typechecking for our ActionData return\n * statements, while still returning the accurate HTTP status, 400 Bad Request,\n * to the client.\n */\nconst badRequest = (data: ActionData) => json(data, { status: 400 });\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const loginType = form.get(\"loginType\");\n  const username = form.get(\"username\");\n  const password = form.get(\"password\");\n  const redirectTo = validateUrl(form.get(\"redirectTo\") || \"/jokes\");\n  if (\n    typeof loginType !== \"string\" ||\n    typeof username !== \"string\" ||\n    typeof password !== \"string\" ||\n    typeof redirectTo !== \"string\"\n  ) {\n    return badRequest({ formError: `Form not submitted correctly.` });\n  }\n\n  const fields = { loginType, username, password };\n  const fieldErrors = {\n    username: validateUsername(username),\n    password: validatePassword(password),\n  };\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return badRequest({ fieldErrors, fields });\n  }\n\n  switch (loginType) {\n    case \"login\": {\n      const user = await login({ username, password });\n      if (!user) {\n        return badRequest({\n          fields,\n          formError: `Username/Password combination is incorrect`,\n        });\n      }\n      return createUserSession(user.id, redirectTo);\n    }\n    case \"register\": {\n      const userExists = await db.user.findFirst({ where: { username } });\n      if (userExists) {\n        return badRequest({\n          fields,\n          formError: `User with username ${username} already exists`,\n        });\n      }\n      const user = await register({ username, password });\n      if (!user) {\n        return badRequest({\n          fields,\n          formError: `Something went wrong trying to create a new user.`,\n        });\n      }\n      return createUserSession(user.id, redirectTo);\n    }\n    default: {\n      return badRequest({ fields, formError: `Login type invalid` });\n    }\n  }\n};\n\nexport default function Login() {\n  const actionData = useActionData<ActionData>();\n  const [searchParams] = useSearchParams();\n  return (\n    <div className=\"container\">\n      <div className=\"content\" data-light=\"\">\n        <h1>Login</h1>\n        <Form method=\"post\">\n          <input\n            type=\"hidden\"\n            name=\"redirectTo\"\n            value={searchParams.get(\"redirectTo\") ?? undefined}\n          />\n          <fieldset>\n            <legend className=\"sr-only\">Login or Register?</legend>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"login\"\n                defaultChecked={\n                  !actionData?.fields?.loginType ||\n                  actionData?.fields?.loginType === \"login\"\n                }\n              />{\" \"}\n              Login\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"register\"\n                defaultChecked={actionData?.fields?.loginType === \"register\"}\n              />{\" \"}\n              Register\n            </label>\n          </fieldset>\n          <div>\n            <label htmlFor=\"username-input\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username-input\"\n              name=\"username\"\n              defaultValue={actionData?.fields?.username}\n              aria-invalid={Boolean(actionData?.fieldErrors?.username)}\n              aria-errormessage={\n                actionData?.fieldErrors?.username ? \"username-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.username ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"username-error\"\n              >\n                {actionData.fieldErrors.username}\n              </p>\n            ) : null}\n          </div>\n          <div>\n            <label htmlFor=\"password-input\">Password</label>\n            <input\n              id=\"password-input\"\n              name=\"password\"\n              defaultValue={actionData?.fields?.password}\n              type=\"password\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.password)}\n              aria-errormessage={\n                actionData?.fieldErrors?.password ? \"password-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.password ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"password-error\"\n              >\n                {actionData.fieldErrors.password}\n              </p>\n            ) : null}\n          </div>\n          <div id=\"form-error-message\">\n            {actionData?.formError ? (\n              <p className=\"form-validation-error\" role=\"alert\">\n                {actionData.formError}\n              </p>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"button\">\n            Submit\n          </button>\n        </Form>\n      </div>\n      <div className=\"links\">\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/jokes\">Jokes</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n", "export default {'version':'713a4d89','entry':{'module':'/build/entry.client-TCCLZSJ3.js','imports':['/build/_shared/chunk-MPPXUMSF.js','/build/_shared/chunk-O6YYFGCX.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-2LWSLHRF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-6ZCR5KUG.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jokes':{'id':'routes/jokes','parentId':'root','path':'jokes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes-GRSDO2CH.js','imports':['/build/_shared/chunk-4PNKXX5G.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jokes/$jokeId':{'id':'routes/jokes/$jokeId','parentId':'routes/jokes','path':':jokeId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes/$jokeId-ZR3SXLRV.js','imports':['/build/_shared/chunk-4N6TLVPD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/jokes/index':{'id':'routes/jokes/index','parentId':'routes/jokes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/jokes/index-XD7IAMY2.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/jokes/new':{'id':'routes/jokes/new','parentId':'routes/jokes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes/new-RQ4S3QZP.js','imports':['/build/_shared/chunk-4N6TLVPD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/jokes[.]rss':{'id':'routes/jokes[.]rss','parentId':'root','path':'jokes.rss','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes[.]rss-QXIILTBO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-3XBAODRV.js','imports':['/build/_shared/chunk-4PNKXX5G.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-4CD5SKAF.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-713A4D89.js'};", "\nimport * as entryServer from \"/home/ghilain/projects/jokes/app/entry.server.tsx\";\nimport * as route0 from \"/home/ghilain/projects/jokes/app/root.tsx\";\nimport * as route1 from \"/home/ghilain/projects/jokes/app/routes/jokes[.]rss.tsx\";\nimport * as route2 from \"/home/ghilain/projects/jokes/app/routes/logout.tsx\";\nimport * as route3 from \"/home/ghilain/projects/jokes/app/routes/index.tsx\";\nimport * as route4 from \"/home/ghilain/projects/jokes/app/routes/jokes.tsx\";\nimport * as route5 from \"/home/ghilain/projects/jokes/app/routes/jokes/$jokeId.tsx\";\nimport * as route6 from \"/home/ghilain/projects/jokes/app/routes/jokes/index.tsx\";\nimport * as route7 from \"/home/ghilain/projects/jokes/app/routes/jokes/new.tsx\";\nimport * as route8 from \"/home/ghilain/projects/jokes/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/jokes[.]rss\": {\n      id: \"routes/jokes[.]rss\",\n      parentId: \"root\",\n      path: \"jokes.rss\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/jokes\": {\n      id: \"routes/jokes\",\n      parentId: \"root\",\n      path: \"jokes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/jokes/$jokeId\": {\n      id: \"routes/jokes/$jokeId\",\n      parentId: \"routes/jokes\",\n      path: \":jokeId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/jokes/index\": {\n      id: \"routes/jokes/index\",\n      parentId: \"routes/jokes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/jokes/new\": {\n      id: \"routes/jokes/new\",\n      parentId: \"routes/jokes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };"],
  "mappings": "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",
  "names": []
}
